@import "tailwindcss";

@import "@radix-ui/colors/jade.css";
@import "@radix-ui/colors/jade-dark.css";
@import "@radix-ui/colors/olive.css";
@import "@radix-ui/colors/olive-dark.css";

@import "lightgallery/css/lightgallery-bundle.css";

@import "./typography.css";
@import "./fonts.css";

@variant dark (&:where(.dark, .dark *));

@source "../../**/templates/**";

@theme {
  /* Fonts */
  --font-sans: intervariable, -apple-system, blinkmacsystemfont, avenir next, avenir, segoe ui, helvetica neue, helvetica, cantarell, ubuntu, roboto, noto, arial, sans-serif;
  --font-serif: charter, iowan old style, apple garamond, baskerville, times new roman, droid serif, times, source serif pro, serif, apple color emoji, segoe ui emoji, segoe ui symbol;
  --font-mono: ml, menlo, consolas, monaco, liberation mono, lucida console, monospace;
  /* Utopia*/
  /* Fluid type scale */
  /* @link https://utopia.fyi/type/calculator?c=320,16,1.2,1200,18,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */
  --text-step--2: clamp(0.6944rem, 0.6852rem + 0.0465vw, 0.72rem);
  --text-step--1: clamp(0.8333rem, 0.8091rem + 0.1212vw, 0.9rem);
  --text-step-0: clamp(1rem, 0.9545rem + 0.2273vw, 1.125rem);
  --text-step-1: clamp(1.2rem, 1.125rem + 0.375vw, 1.4063rem);
  --text-step-2: clamp(1.44rem, 1.3244rem + 0.5778vw, 1.7578rem);
  --text-step-3: clamp(1.728rem, 1.5574rem + 0.8532vw, 2.1973rem);
  --text-step-4: clamp(2.0736rem, 1.8289rem + 1.2236vw, 2.7466rem);
  --text-step-5: clamp(2.4883rem, 2.1447rem + 1.718vw, 3.4332rem);
  /* Fluid space scale */
  /* @link https://utopia.fyi/space/calculator?c=320,16,1.2,1200,18,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */
  --spacing-3xs: clamp(0.25rem, 0.2273rem + 0.1136vw, 0.3125rem);
  --spacing-2xs: clamp(0.5rem, 0.4773rem + 0.1136vw, 0.5625rem);
  --spacing-xs: clamp(0.75rem, 0.7045rem + 0.2273vw, 0.875rem);
  --spacing-s: clamp(1rem, 0.9545rem + 0.2273vw, 1.125rem);
  --spacing-m: clamp(1.5rem, 1.4318rem + 0.3409vw, 1.6875rem);
  --spacing-l: clamp(2rem, 1.9091rem + 0.4545vw, 2.25rem);
  --spacing-xl: clamp(3rem, 2.8636rem + 0.6818vw, 3.375rem);
  --spacing-2xl: clamp(4rem, 3.8182rem + 0.9091vw, 4.5rem);
  --spacing-3xl: clamp(6rem, 5.7273rem + 1.3636vw, 6.75rem);
  /* One-up pairs */
  --spacing-3xs-2xs: clamp(0.25rem, 0.1364rem + 0.5682vw, 0.5625rem);
  --spacing-2xs-xs: clamp(0.5rem, 0.3636rem + 0.6818vw, 0.875rem);
  --spacing-xs-s: clamp(0.75rem, 0.6136rem + 0.6818vw, 1.125rem);
  --spacing-s-m: clamp(1rem, 0.75rem + 1.25vw, 1.6875rem);
  --spacing-m-l: clamp(1.5rem, 1.2273rem + 1.3636vw, 2.25rem);
  --spacing-l-xl: clamp(2rem, 1.5rem + 2.5vw, 3.375rem);
  --spacing-xl-2xl: clamp(3rem, 2.4545rem + 2.7273vw, 4.5rem);
  --spacing-2xl-3xl: clamp(4rem, 3rem + 5vw, 6.75rem);
  /* Custom pairs */
  --spacing-s-l: clamp(1rem, 0.5455rem + 2.2727vw, 2.25rem);
  /* Defined spaces*/
  --wrapper-width: clamp(16rem, 93vw, 77.5rem);
  --gutter: var(--spacing-s-m);
  /* Leading */
  --leading-single: 1;
  --leading-display: 1.1;
  --leading-tight: 1.3;
  --leading-snug: 1.4;
  --leading-body: 1.5;
  /* Colors */
  /* Accent */
  --color-accent-1: var(--jade-1);
  --color-accent-2: var(--jade-2);
  --color-accent-3: var(--jade-3);
  --color-accent-4: var(--jade-4);
  --color-accent-5: var(--jade-5);
  --color-accent-6: var(--jade-6);
  --color-accent-7: var(--jade-7);
  --color-accent-8: var(--jade-8);
  --color-accent-9: var(--jade-9);
  --color-accent-10: var(--jade-10);
  --color-accent-11: var(--jade-11);
  --color-accent-12: var(--jade-12);
  /* Gray */
  --color-gray-1: var(--olive-1);
  --color-gray-2: var(--olive-2);
  --color-gray-3: var(--olive-3);
  --color-gray-4: var(--olive-4);
  --color-gray-5: var(--olive-5);
  --color-gray-6: var(--olive-6);
  --color-gray-7: var(--olive-7);
  --color-gray-8: var(--olive-8);
  --color-gray-9: var(--olive-9);
  --color-gray-10: var(--olive-10);
  --color-gray-11: var(--olive-11);
  --color-gray-12: var(--olive-12);
}

.no-js .hide-no-js {
  display: none !important;
}

/**
 * Base font size
 */
html,
body {
  font-size: var(--text-step-0);
}

/**
 * Sticky footer
 * https://css-tricks.com/couple-takes-sticky-footer/
 */

html,
body {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
}

#main-content {
  flex: 1 0 auto;
}

/**
 * Wrapper
 */

.wrapper {
  width: var(--wrapper-width);
  margin-inline: auto;
  padding-inline: var(--gutter);
}

/**
 * General UI color
 */
body {
  background-color: var(--color-gray-1);
  color: var(--color-gray-12);
}

::selection {
  background-color: var(--color-accent-7);
  color: var(--color-gray-12);
}


/*
 * Links
 */

a {
  text-decoration: underline;
  text-decoration-color: var(--color-gray-8);
  text-underline-offset: max(0.1em, 2.5px);
}

a:hover {
  text-decoration: none;
}

.no-underline {
  text-decoration: none;
}

/**
 * no-underline links should still have a hover state
 */
a.no-underline:hover {
  text-decoration: underline;
}

/* Icons */
.icon {
  flex-shrink: 0;
  width: 24px;
  height: 24px;
}

/*
REPEL
A little layout that pushes items away from each other where
there is space in the viewport and stacks on small viewports

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--repel-vertical-alignment How items should align vertically.
Can be any acceptable flexbox alignment value.
*/

.repel {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: var(--repel-vertical-alignment, center);
  gap: var(--gutter, var(--spacing-s-l));
}

.repel[data-nowrap] {
  flex-wrap: nowrap;
}

.e-title {
  &::before {
    content: "\201C";
  }

  &::after {
    content: "\201D";
  }

  font-style: italic;
}

.e-label,
.e-permalink {
  /* TODO Shame */
  color: var(--color-gray-9) !important;
}

.fluid-grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-placement, auto-fill), minmax(var(--grid-min-item-size, 14rem), 1fr));
  gap: var(--gutter);
}

.grid-gutter-3xs {
  --gutter: var(--spacing-3xs);
}

/*
SIDEBAR
More info: https://every-layout.dev/layouts/sidebar/
A layout that allows you to have a flexible main content area
and a "fixed" width sidebar that sits on the left or right.
If there is not enough viewport space to fit both the sidebar
width *and* the main content minimum width, they will stack
on top of each other

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-size-1)): This defines the space
between the sidebar and main content.

--sidebar-target-width (20rem): How large the sidebar should be

--sidebar-content-min-width(50%): The minimum size of the main content area

EXCEPTIONS
.sidebar[data-direction='rtl']: flips the sidebar to be on the right
*/

.sidebar-with-nav {
  --sidebar-target-width: 14.5rem;
}

.sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--spacing-s-l));
}

.sidebar:not([data-direction]) > :first-child {
  flex-basis: var(--sidebar-target-width, 20rem);
  flex-grow: 1;
}

.sidebar:not([data-direction]) > :nth-child(2) {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: var(--sidebar-content-min-width, 50%);
}

/*
A flipped version where the sidebar is on the right
*/
.sidebar[data-direction="rtl"] > :last-child {
  flex-basis: var(--sidebar-target-width, 20rem);
  flex-grow: 1;
}

.sidebar[data-direction="rtl"] > :nth-child(-2) {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: var(--sidebar-content-min-width, 50%);
}

@media screen and (min-width: 1024px) {
  .sticky {
    position: sticky;
    top: var(--gutter);
  }
}

.grid-min-item-\[12rem\] {
  --grid-min-item-size: 12rem;
}

.stars {
  display: flex;
  align-items: center;
}

.stars svg {
  height: 1rem;
}

.a-meta-grid {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 0 var(--spacing-s);
}

.a-album {
  gap: var(--spacing-s);
}